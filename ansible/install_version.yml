---
- hosts: app
  vars:
    local_versions_dir: /opt/futurico/deploy/versions
    local_filename: "{{ local_versions_dir }}/{{ version }}.tar"
    remote_app_dir: /opt/futurico/blog
    remote_version_dir: "{{ remote_app_dir }}/{{ version }}"
    remote_sockets_dir: "{{ remote_version_dir }}/run"
    remote_logs_dir: "{{ remote_version_dir }}/logs"
    remote_filename: "{{ remote_version_dir }}/{{ version }}.tar"
    domain_name: app1.foo

  tasks:
    - debug: msg="Installing {{ version }} on app servers"

    - name: Ensure version dir exists locally
      local_action:
        file path={{ local_versions_dir }} state=directory owner={{ ansible_ssh_user }}
      sudo: true

    - name: Check if image archive exists locally
      local_action:
        stat path={{ local_filename }}
      register: version_archive

    - name: Exporting version image
      local_action: shell docker save -o {{ local_filename }} {{ version }}
      when: version_archive.stat.exists == False

    - name: Ensure version dir exists remotely
      file: path={{ remote_version_dir }} state=directory owner={{ ansible_ssh_user }}
      sudo: true

    - name: Checking if image exists remotely
      stat: path={{ remote_filename }}
      register: version_archive

    - name: Copying image to remote host
      copy: src={{ local_filename }} dest={{ remote_filename }}
      when: version_archive.stat.exists == False

    - name: Importing docker image
      shell: docker load -i {{ remote_filename }}

    - name: Run image
      docker:
        name: app-{{ version }}
        image: "{{ version }}"
        state: started
        volumes:
            - "{{ remote_sockets_dir }}:/run"
            - "{{ remote_logs_dir }}:/logs"

    - name: Setup nginx config
      template: src=templates/nginx-version.conf.j2 dest=/etc/nginx/sites-enabled/{{ version }}.conf
      sudo: true

    - name: Reload nginx
      service: name=nginx state=reloaded
      sudo: true

    - debug: msg="Version {{ version }} is successfully installed"
